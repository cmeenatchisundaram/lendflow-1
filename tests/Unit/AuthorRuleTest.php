<?php

namespace Tests\Unit;

use App\Rules\AuthorRule;
use PHPUnit\Framework\TestCase;

class AuthorRuleTest extends TestCase
{
    protected AuthorRule $rule;
    /**
     * @return void
     */
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->rule = new AuthorRule();
    }

    /**
     * @return \string[][]
     */
    public function validAuthorProvider()
    {
        return [
            ['john'],
            ['james molloy'],
            ['o\'connor'],
            ['-5 !@£!£@@!£! o\'connor']
        ];
    }

    /**
     * @return array
     */
    public function inValidAuthorProvider()
    {
        return [
            [null],
            [''],
            ['  '],
            [123],
            [5.0],
            [-8]
        ];
    }

    /**
     * @dataProvider validAuthorProvider
     * @param $author
     * @return void
     */
    public function testAuthorRulePass($author)
    {
        $this->assertTrue($this->rule->passes('author',$author));
    }

    /**
     * @dataProvider inValidAuthorProvider
     * @param $author
     * @return void
     */
    public function testAuthorRuleFail($author)
    {
        $this->assertFalse($this->rule->passes('author', $author));
    }
}
